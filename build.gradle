plugins {
    id "application"
    id "distribution"
    id "idea"
    id "jacoco"
    id "com.github.johnrengelman.shadow" version "5.1.0"
    id "com.diffplug.gradle.spotless" version "3.25.0"
    id "de.undercouch.download" version "4.0.0"
}

description 'web3j command line tools'
mainClassName = 'org.web3j.console.Runner'
applicationName = 'web3j'

ext {
    web3jVersion = project.property('version')
    picocli = '4.0.4'
    slf4jVersion = "1.7.+"
    junitVersion = '5.+'
    mockitoVersion = "3.+"
    ktlintVersion = "0.31.0"
}

apply {
    [
        'jacoco',
        'java',
        'javadoc',
        'repositories',
        'spotless'
    ].each { buildScript ->
        download {
            src "https://raw.githubusercontent.com/web3j/build-tools/master/gradle/$buildScript/build.gradle"
            dest "$rootDir/gradle/$buildScript/build.gradle"
            overwrite false
            quiet true
            onlyIfModified true
        }
        from("$rootDir/gradle/$buildScript/build.gradle")
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

distZip {
    archiveName "web3j-${project.version}.zip"
}

distTar {
    archiveName "web3j-${project.version}.tar"
}

dependencies {
    implementation "org.web3j:codegen:$web3jVersion",
            "org.web3j:contracts:$web3jVersion",
            "org.web3j:core:$web3jVersion",
            "org.web3j:crypto:$web3jVersion",
            "org.web3j:hosted-providers:$web3jVersion",
            "info.picocli:picocli:$picocli",
            files('libs/smartcheck.jar'),
            "javax.xml.bind:jaxb-api:2.2.11",
            "com.sun.xml.bind:jaxb-core:2.2.11",
            "com.sun.xml.bind:jaxb-impl:2.2.11",
            "javax.activation:activation:1.1.1"

    runtime "org.slf4j:slf4j-nop:$slf4jVersion"

    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.mockito:mockito-core:$mockitoVersion"
}
